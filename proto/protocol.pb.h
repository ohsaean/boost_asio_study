// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protocol.proto

#ifndef PROTOBUF_protocol_2eproto__INCLUDED
#define PROTOBUF_protocol_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace gs_protocol {
class ErrorMsg;
class ErrorMsgDefaultTypeInternal;
extern ErrorMsgDefaultTypeInternal _ErrorMsg_default_instance_;
class Message;
class MessageDefaultTypeInternal;
extern MessageDefaultTypeInternal _Message_default_instance_;
class NotifyAction1Msg;
class NotifyAction1MsgDefaultTypeInternal;
extern NotifyAction1MsgDefaultTypeInternal _NotifyAction1Msg_default_instance_;
class NotifyJoinMsg;
class NotifyJoinMsgDefaultTypeInternal;
extern NotifyJoinMsgDefaultTypeInternal _NotifyJoinMsg_default_instance_;
class NotifyQuitMsg;
class NotifyQuitMsgDefaultTypeInternal;
extern NotifyQuitMsgDefaultTypeInternal _NotifyQuitMsg_default_instance_;
class ReqAction1;
class ReqAction1DefaultTypeInternal;
extern ReqAction1DefaultTypeInternal _ReqAction1_default_instance_;
class ReqCreate;
class ReqCreateDefaultTypeInternal;
extern ReqCreateDefaultTypeInternal _ReqCreate_default_instance_;
class ReqJoin;
class ReqJoinDefaultTypeInternal;
extern ReqJoinDefaultTypeInternal _ReqJoin_default_instance_;
class ReqLogin;
class ReqLoginDefaultTypeInternal;
extern ReqLoginDefaultTypeInternal _ReqLogin_default_instance_;
class ReqQuit;
class ReqQuitDefaultTypeInternal;
extern ReqQuitDefaultTypeInternal _ReqQuit_default_instance_;
class ReqRoomList;
class ReqRoomListDefaultTypeInternal;
extern ReqRoomListDefaultTypeInternal _ReqRoomList_default_instance_;
class ResAction1;
class ResAction1DefaultTypeInternal;
extern ResAction1DefaultTypeInternal _ResAction1_default_instance_;
class ResCreate;
class ResCreateDefaultTypeInternal;
extern ResCreateDefaultTypeInternal _ResCreate_default_instance_;
class ResJoin;
class ResJoinDefaultTypeInternal;
extern ResJoinDefaultTypeInternal _ResJoin_default_instance_;
class ResLogin;
class ResLoginDefaultTypeInternal;
extern ResLoginDefaultTypeInternal _ResLogin_default_instance_;
class ResQuit;
class ResQuitDefaultTypeInternal;
extern ResQuitDefaultTypeInternal _ResQuit_default_instance_;
class ResRoomList;
class ResRoomListDefaultTypeInternal;
extern ResRoomListDefaultTypeInternal _ResRoomList_default_instance_;
}  // namespace gs_protocol

namespace gs_protocol {

namespace protobuf_protocol_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_protocol_2eproto

// ===================================================================

class Message : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gs_protocol.Message) */ {
 public:
  Message();
  virtual ~Message();

  Message(const Message& from);

  inline Message& operator=(const Message& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Message& default_instance();

  enum PayloadCase {
    kReqLogin = 1,
    kReqCreate = 2,
    kReqJoin = 3,
    kReqAction1 = 4,
    kReqQuit = 5,
    kReqRoomList = 6,
    kResLogin = 7,
    kResCreate = 8,
    kResJoin = 9,
    kResAction1 = 10,
    kResQuit = 11,
    kResRoomList = 12,
    kNotifyJoin = 13,
    kNotifyAction1 = 14,
    kNotifyQuit = 15,
    kError = 1000,
    PAYLOAD_NOT_SET = 0,
  };

  static inline const Message* internal_default_instance() {
    return reinterpret_cast<const Message*>(
               &_Message_default_instance_);
  }

  void Swap(Message* other);

  // implements Message ----------------------------------------------

  inline Message* New() const PROTOBUF_FINAL { return New(NULL); }

  Message* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Message& from);
  void MergeFrom(const Message& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Message* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .gs_protocol.ReqLogin req_login = 1;
  bool has_req_login() const;
  void clear_req_login();
  static const int kReqLoginFieldNumber = 1;
  const ::gs_protocol::ReqLogin& req_login() const;
  ::gs_protocol::ReqLogin* mutable_req_login();
  ::gs_protocol::ReqLogin* release_req_login();
  void set_allocated_req_login(::gs_protocol::ReqLogin* req_login);

  // .gs_protocol.ReqCreate req_create = 2;
  bool has_req_create() const;
  void clear_req_create();
  static const int kReqCreateFieldNumber = 2;
  const ::gs_protocol::ReqCreate& req_create() const;
  ::gs_protocol::ReqCreate* mutable_req_create();
  ::gs_protocol::ReqCreate* release_req_create();
  void set_allocated_req_create(::gs_protocol::ReqCreate* req_create);

  // .gs_protocol.ReqJoin req_join = 3;
  bool has_req_join() const;
  void clear_req_join();
  static const int kReqJoinFieldNumber = 3;
  const ::gs_protocol::ReqJoin& req_join() const;
  ::gs_protocol::ReqJoin* mutable_req_join();
  ::gs_protocol::ReqJoin* release_req_join();
  void set_allocated_req_join(::gs_protocol::ReqJoin* req_join);

  // .gs_protocol.ReqAction1 req_action1 = 4;
  bool has_req_action1() const;
  void clear_req_action1();
  static const int kReqAction1FieldNumber = 4;
  const ::gs_protocol::ReqAction1& req_action1() const;
  ::gs_protocol::ReqAction1* mutable_req_action1();
  ::gs_protocol::ReqAction1* release_req_action1();
  void set_allocated_req_action1(::gs_protocol::ReqAction1* req_action1);

  // .gs_protocol.ReqQuit req_quit = 5;
  bool has_req_quit() const;
  void clear_req_quit();
  static const int kReqQuitFieldNumber = 5;
  const ::gs_protocol::ReqQuit& req_quit() const;
  ::gs_protocol::ReqQuit* mutable_req_quit();
  ::gs_protocol::ReqQuit* release_req_quit();
  void set_allocated_req_quit(::gs_protocol::ReqQuit* req_quit);

  // .gs_protocol.ReqRoomList req_room_list = 6;
  bool has_req_room_list() const;
  void clear_req_room_list();
  static const int kReqRoomListFieldNumber = 6;
  const ::gs_protocol::ReqRoomList& req_room_list() const;
  ::gs_protocol::ReqRoomList* mutable_req_room_list();
  ::gs_protocol::ReqRoomList* release_req_room_list();
  void set_allocated_req_room_list(::gs_protocol::ReqRoomList* req_room_list);

  // .gs_protocol.ResLogin res_login = 7;
  bool has_res_login() const;
  void clear_res_login();
  static const int kResLoginFieldNumber = 7;
  const ::gs_protocol::ResLogin& res_login() const;
  ::gs_protocol::ResLogin* mutable_res_login();
  ::gs_protocol::ResLogin* release_res_login();
  void set_allocated_res_login(::gs_protocol::ResLogin* res_login);

  // .gs_protocol.ResCreate res_create = 8;
  bool has_res_create() const;
  void clear_res_create();
  static const int kResCreateFieldNumber = 8;
  const ::gs_protocol::ResCreate& res_create() const;
  ::gs_protocol::ResCreate* mutable_res_create();
  ::gs_protocol::ResCreate* release_res_create();
  void set_allocated_res_create(::gs_protocol::ResCreate* res_create);

  // .gs_protocol.ResJoin res_join = 9;
  bool has_res_join() const;
  void clear_res_join();
  static const int kResJoinFieldNumber = 9;
  const ::gs_protocol::ResJoin& res_join() const;
  ::gs_protocol::ResJoin* mutable_res_join();
  ::gs_protocol::ResJoin* release_res_join();
  void set_allocated_res_join(::gs_protocol::ResJoin* res_join);

  // .gs_protocol.ResAction1 res_action1 = 10;
  bool has_res_action1() const;
  void clear_res_action1();
  static const int kResAction1FieldNumber = 10;
  const ::gs_protocol::ResAction1& res_action1() const;
  ::gs_protocol::ResAction1* mutable_res_action1();
  ::gs_protocol::ResAction1* release_res_action1();
  void set_allocated_res_action1(::gs_protocol::ResAction1* res_action1);

  // .gs_protocol.ResQuit res_quit = 11;
  bool has_res_quit() const;
  void clear_res_quit();
  static const int kResQuitFieldNumber = 11;
  const ::gs_protocol::ResQuit& res_quit() const;
  ::gs_protocol::ResQuit* mutable_res_quit();
  ::gs_protocol::ResQuit* release_res_quit();
  void set_allocated_res_quit(::gs_protocol::ResQuit* res_quit);

  // .gs_protocol.ResRoomList res_room_list = 12;
  bool has_res_room_list() const;
  void clear_res_room_list();
  static const int kResRoomListFieldNumber = 12;
  const ::gs_protocol::ResRoomList& res_room_list() const;
  ::gs_protocol::ResRoomList* mutable_res_room_list();
  ::gs_protocol::ResRoomList* release_res_room_list();
  void set_allocated_res_room_list(::gs_protocol::ResRoomList* res_room_list);

  // .gs_protocol.NotifyJoinMsg notify_join = 13;
  bool has_notify_join() const;
  void clear_notify_join();
  static const int kNotifyJoinFieldNumber = 13;
  const ::gs_protocol::NotifyJoinMsg& notify_join() const;
  ::gs_protocol::NotifyJoinMsg* mutable_notify_join();
  ::gs_protocol::NotifyJoinMsg* release_notify_join();
  void set_allocated_notify_join(::gs_protocol::NotifyJoinMsg* notify_join);

  // .gs_protocol.NotifyAction1Msg notify_action1 = 14;
  bool has_notify_action1() const;
  void clear_notify_action1();
  static const int kNotifyAction1FieldNumber = 14;
  const ::gs_protocol::NotifyAction1Msg& notify_action1() const;
  ::gs_protocol::NotifyAction1Msg* mutable_notify_action1();
  ::gs_protocol::NotifyAction1Msg* release_notify_action1();
  void set_allocated_notify_action1(::gs_protocol::NotifyAction1Msg* notify_action1);

  // .gs_protocol.NotifyQuitMsg notify_quit = 15;
  bool has_notify_quit() const;
  void clear_notify_quit();
  static const int kNotifyQuitFieldNumber = 15;
  const ::gs_protocol::NotifyQuitMsg& notify_quit() const;
  ::gs_protocol::NotifyQuitMsg* mutable_notify_quit();
  ::gs_protocol::NotifyQuitMsg* release_notify_quit();
  void set_allocated_notify_quit(::gs_protocol::NotifyQuitMsg* notify_quit);

  // .gs_protocol.ErrorMsg error = 1000;
  bool has_error() const;
  void clear_error();
  static const int kErrorFieldNumber = 1000;
  const ::gs_protocol::ErrorMsg& error() const;
  ::gs_protocol::ErrorMsg* mutable_error();
  ::gs_protocol::ErrorMsg* release_error();
  void set_allocated_error(::gs_protocol::ErrorMsg* error);

  PayloadCase payload_case() const;
  // @@protoc_insertion_point(class_scope:gs_protocol.Message)
 private:
  void set_has_req_login();
  void set_has_req_create();
  void set_has_req_join();
  void set_has_req_action1();
  void set_has_req_quit();
  void set_has_req_room_list();
  void set_has_res_login();
  void set_has_res_create();
  void set_has_res_join();
  void set_has_res_action1();
  void set_has_res_quit();
  void set_has_res_room_list();
  void set_has_notify_join();
  void set_has_notify_action1();
  void set_has_notify_quit();
  void set_has_error();

  inline bool has_payload() const;
  void clear_payload();
  inline void clear_has_payload();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union PayloadUnion {
    PayloadUnion() {}
    ::gs_protocol::ReqLogin* req_login_;
    ::gs_protocol::ReqCreate* req_create_;
    ::gs_protocol::ReqJoin* req_join_;
    ::gs_protocol::ReqAction1* req_action1_;
    ::gs_protocol::ReqQuit* req_quit_;
    ::gs_protocol::ReqRoomList* req_room_list_;
    ::gs_protocol::ResLogin* res_login_;
    ::gs_protocol::ResCreate* res_create_;
    ::gs_protocol::ResJoin* res_join_;
    ::gs_protocol::ResAction1* res_action1_;
    ::gs_protocol::ResQuit* res_quit_;
    ::gs_protocol::ResRoomList* res_room_list_;
    ::gs_protocol::NotifyJoinMsg* notify_join_;
    ::gs_protocol::NotifyAction1Msg* notify_action1_;
    ::gs_protocol::NotifyQuitMsg* notify_quit_;
    ::gs_protocol::ErrorMsg* error_;
  } payload_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct  protobuf_protocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ReqLogin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gs_protocol.ReqLogin) */ {
 public:
  ReqLogin();
  virtual ~ReqLogin();

  ReqLogin(const ReqLogin& from);

  inline ReqLogin& operator=(const ReqLogin& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqLogin& default_instance();

  static inline const ReqLogin* internal_default_instance() {
    return reinterpret_cast<const ReqLogin*>(
               &_ReqLogin_default_instance_);
  }

  void Swap(ReqLogin* other);

  // implements Message ----------------------------------------------

  inline ReqLogin* New() const PROTOBUF_FINAL { return New(NULL); }

  ReqLogin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ReqLogin& from);
  void MergeFrom(const ReqLogin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ReqLogin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 userID = 1;
  void clear_userid();
  static const int kUserIDFieldNumber = 1;
  ::google::protobuf::int64 userid() const;
  void set_userid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:gs_protocol.ReqLogin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 userid_;
  mutable int _cached_size_;
  friend struct  protobuf_protocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ReqCreate : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gs_protocol.ReqCreate) */ {
 public:
  ReqCreate();
  virtual ~ReqCreate();

  ReqCreate(const ReqCreate& from);

  inline ReqCreate& operator=(const ReqCreate& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqCreate& default_instance();

  static inline const ReqCreate* internal_default_instance() {
    return reinterpret_cast<const ReqCreate*>(
               &_ReqCreate_default_instance_);
  }

  void Swap(ReqCreate* other);

  // implements Message ----------------------------------------------

  inline ReqCreate* New() const PROTOBUF_FINAL { return New(NULL); }

  ReqCreate* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ReqCreate& from);
  void MergeFrom(const ReqCreate& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ReqCreate* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 userID = 1;
  void clear_userid();
  static const int kUserIDFieldNumber = 1;
  ::google::protobuf::int64 userid() const;
  void set_userid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:gs_protocol.ReqCreate)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 userid_;
  mutable int _cached_size_;
  friend struct  protobuf_protocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ReqJoin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gs_protocol.ReqJoin) */ {
 public:
  ReqJoin();
  virtual ~ReqJoin();

  ReqJoin(const ReqJoin& from);

  inline ReqJoin& operator=(const ReqJoin& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqJoin& default_instance();

  static inline const ReqJoin* internal_default_instance() {
    return reinterpret_cast<const ReqJoin*>(
               &_ReqJoin_default_instance_);
  }

  void Swap(ReqJoin* other);

  // implements Message ----------------------------------------------

  inline ReqJoin* New() const PROTOBUF_FINAL { return New(NULL); }

  ReqJoin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ReqJoin& from);
  void MergeFrom(const ReqJoin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ReqJoin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 userID = 1;
  void clear_userid();
  static const int kUserIDFieldNumber = 1;
  ::google::protobuf::int64 userid() const;
  void set_userid(::google::protobuf::int64 value);

  // int64 roomID = 2;
  void clear_roomid();
  static const int kRoomIDFieldNumber = 2;
  ::google::protobuf::int64 roomid() const;
  void set_roomid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:gs_protocol.ReqJoin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 userid_;
  ::google::protobuf::int64 roomid_;
  mutable int _cached_size_;
  friend struct  protobuf_protocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ReqAction1 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gs_protocol.ReqAction1) */ {
 public:
  ReqAction1();
  virtual ~ReqAction1();

  ReqAction1(const ReqAction1& from);

  inline ReqAction1& operator=(const ReqAction1& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqAction1& default_instance();

  static inline const ReqAction1* internal_default_instance() {
    return reinterpret_cast<const ReqAction1*>(
               &_ReqAction1_default_instance_);
  }

  void Swap(ReqAction1* other);

  // implements Message ----------------------------------------------

  inline ReqAction1* New() const PROTOBUF_FINAL { return New(NULL); }

  ReqAction1* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ReqAction1& from);
  void MergeFrom(const ReqAction1& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ReqAction1* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 userID = 1;
  void clear_userid();
  static const int kUserIDFieldNumber = 1;
  ::google::protobuf::int64 userid() const;
  void set_userid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:gs_protocol.ReqAction1)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 userid_;
  mutable int _cached_size_;
  friend struct  protobuf_protocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ReqQuit : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gs_protocol.ReqQuit) */ {
 public:
  ReqQuit();
  virtual ~ReqQuit();

  ReqQuit(const ReqQuit& from);

  inline ReqQuit& operator=(const ReqQuit& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqQuit& default_instance();

  static inline const ReqQuit* internal_default_instance() {
    return reinterpret_cast<const ReqQuit*>(
               &_ReqQuit_default_instance_);
  }

  void Swap(ReqQuit* other);

  // implements Message ----------------------------------------------

  inline ReqQuit* New() const PROTOBUF_FINAL { return New(NULL); }

  ReqQuit* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ReqQuit& from);
  void MergeFrom(const ReqQuit& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ReqQuit* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 userID = 1;
  void clear_userid();
  static const int kUserIDFieldNumber = 1;
  ::google::protobuf::int64 userid() const;
  void set_userid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:gs_protocol.ReqQuit)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 userid_;
  mutable int _cached_size_;
  friend struct  protobuf_protocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ReqRoomList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gs_protocol.ReqRoomList) */ {
 public:
  ReqRoomList();
  virtual ~ReqRoomList();

  ReqRoomList(const ReqRoomList& from);

  inline ReqRoomList& operator=(const ReqRoomList& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqRoomList& default_instance();

  static inline const ReqRoomList* internal_default_instance() {
    return reinterpret_cast<const ReqRoomList*>(
               &_ReqRoomList_default_instance_);
  }

  void Swap(ReqRoomList* other);

  // implements Message ----------------------------------------------

  inline ReqRoomList* New() const PROTOBUF_FINAL { return New(NULL); }

  ReqRoomList* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ReqRoomList& from);
  void MergeFrom(const ReqRoomList& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ReqRoomList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 userID = 1;
  void clear_userid();
  static const int kUserIDFieldNumber = 1;
  ::google::protobuf::int64 userid() const;
  void set_userid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:gs_protocol.ReqRoomList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 userid_;
  mutable int _cached_size_;
  friend struct  protobuf_protocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ResLogin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gs_protocol.ResLogin) */ {
 public:
  ResLogin();
  virtual ~ResLogin();

  ResLogin(const ResLogin& from);

  inline ResLogin& operator=(const ResLogin& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ResLogin& default_instance();

  static inline const ResLogin* internal_default_instance() {
    return reinterpret_cast<const ResLogin*>(
               &_ResLogin_default_instance_);
  }

  void Swap(ResLogin* other);

  // implements Message ----------------------------------------------

  inline ResLogin* New() const PROTOBUF_FINAL { return New(NULL); }

  ResLogin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ResLogin& from);
  void MergeFrom(const ResLogin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ResLogin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 userID = 1;
  void clear_userid();
  static const int kUserIDFieldNumber = 1;
  ::google::protobuf::int64 userid() const;
  void set_userid(::google::protobuf::int64 value);

  // int32 result = 2;
  void clear_result();
  static const int kResultFieldNumber = 2;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gs_protocol.ResLogin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 userid_;
  ::google::protobuf::int32 result_;
  mutable int _cached_size_;
  friend struct  protobuf_protocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ResCreate : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gs_protocol.ResCreate) */ {
 public:
  ResCreate();
  virtual ~ResCreate();

  ResCreate(const ResCreate& from);

  inline ResCreate& operator=(const ResCreate& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ResCreate& default_instance();

  static inline const ResCreate* internal_default_instance() {
    return reinterpret_cast<const ResCreate*>(
               &_ResCreate_default_instance_);
  }

  void Swap(ResCreate* other);

  // implements Message ----------------------------------------------

  inline ResCreate* New() const PROTOBUF_FINAL { return New(NULL); }

  ResCreate* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ResCreate& from);
  void MergeFrom(const ResCreate& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ResCreate* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 userID = 1;
  void clear_userid();
  static const int kUserIDFieldNumber = 1;
  ::google::protobuf::int64 userid() const;
  void set_userid(::google::protobuf::int64 value);

  // int64 roomID = 2;
  void clear_roomid();
  static const int kRoomIDFieldNumber = 2;
  ::google::protobuf::int64 roomid() const;
  void set_roomid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:gs_protocol.ResCreate)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 userid_;
  ::google::protobuf::int64 roomid_;
  mutable int _cached_size_;
  friend struct  protobuf_protocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ResJoin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gs_protocol.ResJoin) */ {
 public:
  ResJoin();
  virtual ~ResJoin();

  ResJoin(const ResJoin& from);

  inline ResJoin& operator=(const ResJoin& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ResJoin& default_instance();

  static inline const ResJoin* internal_default_instance() {
    return reinterpret_cast<const ResJoin*>(
               &_ResJoin_default_instance_);
  }

  void Swap(ResJoin* other);

  // implements Message ----------------------------------------------

  inline ResJoin* New() const PROTOBUF_FINAL { return New(NULL); }

  ResJoin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ResJoin& from);
  void MergeFrom(const ResJoin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ResJoin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 members = 3;
  int members_size() const;
  void clear_members();
  static const int kMembersFieldNumber = 3;
  ::google::protobuf::int64 members(int index) const;
  void set_members(int index, ::google::protobuf::int64 value);
  void add_members(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      members() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_members();

  // int64 userID = 1;
  void clear_userid();
  static const int kUserIDFieldNumber = 1;
  ::google::protobuf::int64 userid() const;
  void set_userid(::google::protobuf::int64 value);

  // int64 roomID = 2;
  void clear_roomid();
  static const int kRoomIDFieldNumber = 2;
  ::google::protobuf::int64 roomid() const;
  void set_roomid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:gs_protocol.ResJoin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > members_;
  mutable int _members_cached_byte_size_;
  ::google::protobuf::int64 userid_;
  ::google::protobuf::int64 roomid_;
  mutable int _cached_size_;
  friend struct  protobuf_protocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ResAction1 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gs_protocol.ResAction1) */ {
 public:
  ResAction1();
  virtual ~ResAction1();

  ResAction1(const ResAction1& from);

  inline ResAction1& operator=(const ResAction1& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ResAction1& default_instance();

  static inline const ResAction1* internal_default_instance() {
    return reinterpret_cast<const ResAction1*>(
               &_ResAction1_default_instance_);
  }

  void Swap(ResAction1* other);

  // implements Message ----------------------------------------------

  inline ResAction1* New() const PROTOBUF_FINAL { return New(NULL); }

  ResAction1* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ResAction1& from);
  void MergeFrom(const ResAction1& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ResAction1* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 userID = 1;
  void clear_userid();
  static const int kUserIDFieldNumber = 1;
  ::google::protobuf::int64 userid() const;
  void set_userid(::google::protobuf::int64 value);

  // int32 result = 2;
  void clear_result();
  static const int kResultFieldNumber = 2;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gs_protocol.ResAction1)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 userid_;
  ::google::protobuf::int32 result_;
  mutable int _cached_size_;
  friend struct  protobuf_protocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ResQuit : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gs_protocol.ResQuit) */ {
 public:
  ResQuit();
  virtual ~ResQuit();

  ResQuit(const ResQuit& from);

  inline ResQuit& operator=(const ResQuit& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ResQuit& default_instance();

  static inline const ResQuit* internal_default_instance() {
    return reinterpret_cast<const ResQuit*>(
               &_ResQuit_default_instance_);
  }

  void Swap(ResQuit* other);

  // implements Message ----------------------------------------------

  inline ResQuit* New() const PROTOBUF_FINAL { return New(NULL); }

  ResQuit* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ResQuit& from);
  void MergeFrom(const ResQuit& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ResQuit* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 userID = 1;
  void clear_userid();
  static const int kUserIDFieldNumber = 1;
  ::google::protobuf::int64 userid() const;
  void set_userid(::google::protobuf::int64 value);

  // int32 isSuccess = 2;
  void clear_issuccess();
  static const int kIsSuccessFieldNumber = 2;
  ::google::protobuf::int32 issuccess() const;
  void set_issuccess(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gs_protocol.ResQuit)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 userid_;
  ::google::protobuf::int32 issuccess_;
  mutable int _cached_size_;
  friend struct  protobuf_protocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ResRoomList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gs_protocol.ResRoomList) */ {
 public:
  ResRoomList();
  virtual ~ResRoomList();

  ResRoomList(const ResRoomList& from);

  inline ResRoomList& operator=(const ResRoomList& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ResRoomList& default_instance();

  static inline const ResRoomList* internal_default_instance() {
    return reinterpret_cast<const ResRoomList*>(
               &_ResRoomList_default_instance_);
  }

  void Swap(ResRoomList* other);

  // implements Message ----------------------------------------------

  inline ResRoomList* New() const PROTOBUF_FINAL { return New(NULL); }

  ResRoomList* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ResRoomList& from);
  void MergeFrom(const ResRoomList& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ResRoomList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 roomIDs = 2;
  int roomids_size() const;
  void clear_roomids();
  static const int kRoomIDsFieldNumber = 2;
  ::google::protobuf::int64 roomids(int index) const;
  void set_roomids(int index, ::google::protobuf::int64 value);
  void add_roomids(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      roomids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_roomids();

  // int64 userID = 1;
  void clear_userid();
  static const int kUserIDFieldNumber = 1;
  ::google::protobuf::int64 userid() const;
  void set_userid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:gs_protocol.ResRoomList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > roomids_;
  mutable int _roomids_cached_byte_size_;
  ::google::protobuf::int64 userid_;
  mutable int _cached_size_;
  friend struct  protobuf_protocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class NotifyJoinMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gs_protocol.NotifyJoinMsg) */ {
 public:
  NotifyJoinMsg();
  virtual ~NotifyJoinMsg();

  NotifyJoinMsg(const NotifyJoinMsg& from);

  inline NotifyJoinMsg& operator=(const NotifyJoinMsg& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyJoinMsg& default_instance();

  static inline const NotifyJoinMsg* internal_default_instance() {
    return reinterpret_cast<const NotifyJoinMsg*>(
               &_NotifyJoinMsg_default_instance_);
  }

  void Swap(NotifyJoinMsg* other);

  // implements Message ----------------------------------------------

  inline NotifyJoinMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  NotifyJoinMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const NotifyJoinMsg& from);
  void MergeFrom(const NotifyJoinMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(NotifyJoinMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 userID = 1;
  void clear_userid();
  static const int kUserIDFieldNumber = 1;
  ::google::protobuf::int64 userid() const;
  void set_userid(::google::protobuf::int64 value);

  // int64 roomID = 2;
  void clear_roomid();
  static const int kRoomIDFieldNumber = 2;
  ::google::protobuf::int64 roomid() const;
  void set_roomid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:gs_protocol.NotifyJoinMsg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 userid_;
  ::google::protobuf::int64 roomid_;
  mutable int _cached_size_;
  friend struct  protobuf_protocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class NotifyAction1Msg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gs_protocol.NotifyAction1Msg) */ {
 public:
  NotifyAction1Msg();
  virtual ~NotifyAction1Msg();

  NotifyAction1Msg(const NotifyAction1Msg& from);

  inline NotifyAction1Msg& operator=(const NotifyAction1Msg& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyAction1Msg& default_instance();

  static inline const NotifyAction1Msg* internal_default_instance() {
    return reinterpret_cast<const NotifyAction1Msg*>(
               &_NotifyAction1Msg_default_instance_);
  }

  void Swap(NotifyAction1Msg* other);

  // implements Message ----------------------------------------------

  inline NotifyAction1Msg* New() const PROTOBUF_FINAL { return New(NULL); }

  NotifyAction1Msg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const NotifyAction1Msg& from);
  void MergeFrom(const NotifyAction1Msg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(NotifyAction1Msg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 userID = 1;
  void clear_userid();
  static const int kUserIDFieldNumber = 1;
  ::google::protobuf::int64 userid() const;
  void set_userid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:gs_protocol.NotifyAction1Msg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 userid_;
  mutable int _cached_size_;
  friend struct  protobuf_protocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class NotifyQuitMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gs_protocol.NotifyQuitMsg) */ {
 public:
  NotifyQuitMsg();
  virtual ~NotifyQuitMsg();

  NotifyQuitMsg(const NotifyQuitMsg& from);

  inline NotifyQuitMsg& operator=(const NotifyQuitMsg& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyQuitMsg& default_instance();

  static inline const NotifyQuitMsg* internal_default_instance() {
    return reinterpret_cast<const NotifyQuitMsg*>(
               &_NotifyQuitMsg_default_instance_);
  }

  void Swap(NotifyQuitMsg* other);

  // implements Message ----------------------------------------------

  inline NotifyQuitMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  NotifyQuitMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const NotifyQuitMsg& from);
  void MergeFrom(const NotifyQuitMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(NotifyQuitMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 userID = 1;
  void clear_userid();
  static const int kUserIDFieldNumber = 1;
  ::google::protobuf::int64 userid() const;
  void set_userid(::google::protobuf::int64 value);

  // int64 roomID = 2;
  void clear_roomid();
  static const int kRoomIDFieldNumber = 2;
  ::google::protobuf::int64 roomid() const;
  void set_roomid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:gs_protocol.NotifyQuitMsg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 userid_;
  ::google::protobuf::int64 roomid_;
  mutable int _cached_size_;
  friend struct  protobuf_protocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ErrorMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gs_protocol.ErrorMsg) */ {
 public:
  ErrorMsg();
  virtual ~ErrorMsg();

  ErrorMsg(const ErrorMsg& from);

  inline ErrorMsg& operator=(const ErrorMsg& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ErrorMsg& default_instance();

  static inline const ErrorMsg* internal_default_instance() {
    return reinterpret_cast<const ErrorMsg*>(
               &_ErrorMsg_default_instance_);
  }

  void Swap(ErrorMsg* other);

  // implements Message ----------------------------------------------

  inline ErrorMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  ErrorMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ErrorMsg& from);
  void MergeFrom(const ErrorMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ErrorMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string errMessage = 2;
  void clear_errmessage();
  static const int kErrMessageFieldNumber = 2;
  const ::std::string& errmessage() const;
  void set_errmessage(const ::std::string& value);
  #if LANG_CXX11
  void set_errmessage(::std::string&& value);
  #endif
  void set_errmessage(const char* value);
  void set_errmessage(const char* value, size_t size);
  ::std::string* mutable_errmessage();
  ::std::string* release_errmessage();
  void set_allocated_errmessage(::std::string* errmessage);

  // int32 errCode = 1;
  void clear_errcode();
  static const int kErrCodeFieldNumber = 1;
  ::google::protobuf::int32 errcode() const;
  void set_errcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gs_protocol.ErrorMsg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr errmessage_;
  ::google::protobuf::int32 errcode_;
  mutable int _cached_size_;
  friend struct  protobuf_protocol_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Message

// .gs_protocol.ReqLogin req_login = 1;
inline bool Message::has_req_login() const {
  return payload_case() == kReqLogin;
}
inline void Message::set_has_req_login() {
  _oneof_case_[0] = kReqLogin;
}
inline void Message::clear_req_login() {
  if (has_req_login()) {
    delete payload_.req_login_;
    clear_has_payload();
  }
}
inline  const ::gs_protocol::ReqLogin& Message::req_login() const {
  // @@protoc_insertion_point(field_get:gs_protocol.Message.req_login)
  return has_req_login()
      ? *payload_.req_login_
      : ::gs_protocol::ReqLogin::default_instance();
}
inline ::gs_protocol::ReqLogin* Message::mutable_req_login() {
  if (!has_req_login()) {
    clear_payload();
    set_has_req_login();
    payload_.req_login_ = new ::gs_protocol::ReqLogin;
  }
  // @@protoc_insertion_point(field_mutable:gs_protocol.Message.req_login)
  return payload_.req_login_;
}
inline ::gs_protocol::ReqLogin* Message::release_req_login() {
  // @@protoc_insertion_point(field_release:gs_protocol.Message.req_login)
  if (has_req_login()) {
    clear_has_payload();
    ::gs_protocol::ReqLogin* temp = payload_.req_login_;
    payload_.req_login_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Message::set_allocated_req_login(::gs_protocol::ReqLogin* req_login) {
  clear_payload();
  if (req_login) {
    set_has_req_login();
    payload_.req_login_ = req_login;
  }
  // @@protoc_insertion_point(field_set_allocated:gs_protocol.Message.req_login)
}

// .gs_protocol.ReqCreate req_create = 2;
inline bool Message::has_req_create() const {
  return payload_case() == kReqCreate;
}
inline void Message::set_has_req_create() {
  _oneof_case_[0] = kReqCreate;
}
inline void Message::clear_req_create() {
  if (has_req_create()) {
    delete payload_.req_create_;
    clear_has_payload();
  }
}
inline  const ::gs_protocol::ReqCreate& Message::req_create() const {
  // @@protoc_insertion_point(field_get:gs_protocol.Message.req_create)
  return has_req_create()
      ? *payload_.req_create_
      : ::gs_protocol::ReqCreate::default_instance();
}
inline ::gs_protocol::ReqCreate* Message::mutable_req_create() {
  if (!has_req_create()) {
    clear_payload();
    set_has_req_create();
    payload_.req_create_ = new ::gs_protocol::ReqCreate;
  }
  // @@protoc_insertion_point(field_mutable:gs_protocol.Message.req_create)
  return payload_.req_create_;
}
inline ::gs_protocol::ReqCreate* Message::release_req_create() {
  // @@protoc_insertion_point(field_release:gs_protocol.Message.req_create)
  if (has_req_create()) {
    clear_has_payload();
    ::gs_protocol::ReqCreate* temp = payload_.req_create_;
    payload_.req_create_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Message::set_allocated_req_create(::gs_protocol::ReqCreate* req_create) {
  clear_payload();
  if (req_create) {
    set_has_req_create();
    payload_.req_create_ = req_create;
  }
  // @@protoc_insertion_point(field_set_allocated:gs_protocol.Message.req_create)
}

// .gs_protocol.ReqJoin req_join = 3;
inline bool Message::has_req_join() const {
  return payload_case() == kReqJoin;
}
inline void Message::set_has_req_join() {
  _oneof_case_[0] = kReqJoin;
}
inline void Message::clear_req_join() {
  if (has_req_join()) {
    delete payload_.req_join_;
    clear_has_payload();
  }
}
inline  const ::gs_protocol::ReqJoin& Message::req_join() const {
  // @@protoc_insertion_point(field_get:gs_protocol.Message.req_join)
  return has_req_join()
      ? *payload_.req_join_
      : ::gs_protocol::ReqJoin::default_instance();
}
inline ::gs_protocol::ReqJoin* Message::mutable_req_join() {
  if (!has_req_join()) {
    clear_payload();
    set_has_req_join();
    payload_.req_join_ = new ::gs_protocol::ReqJoin;
  }
  // @@protoc_insertion_point(field_mutable:gs_protocol.Message.req_join)
  return payload_.req_join_;
}
inline ::gs_protocol::ReqJoin* Message::release_req_join() {
  // @@protoc_insertion_point(field_release:gs_protocol.Message.req_join)
  if (has_req_join()) {
    clear_has_payload();
    ::gs_protocol::ReqJoin* temp = payload_.req_join_;
    payload_.req_join_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Message::set_allocated_req_join(::gs_protocol::ReqJoin* req_join) {
  clear_payload();
  if (req_join) {
    set_has_req_join();
    payload_.req_join_ = req_join;
  }
  // @@protoc_insertion_point(field_set_allocated:gs_protocol.Message.req_join)
}

// .gs_protocol.ReqAction1 req_action1 = 4;
inline bool Message::has_req_action1() const {
  return payload_case() == kReqAction1;
}
inline void Message::set_has_req_action1() {
  _oneof_case_[0] = kReqAction1;
}
inline void Message::clear_req_action1() {
  if (has_req_action1()) {
    delete payload_.req_action1_;
    clear_has_payload();
  }
}
inline  const ::gs_protocol::ReqAction1& Message::req_action1() const {
  // @@protoc_insertion_point(field_get:gs_protocol.Message.req_action1)
  return has_req_action1()
      ? *payload_.req_action1_
      : ::gs_protocol::ReqAction1::default_instance();
}
inline ::gs_protocol::ReqAction1* Message::mutable_req_action1() {
  if (!has_req_action1()) {
    clear_payload();
    set_has_req_action1();
    payload_.req_action1_ = new ::gs_protocol::ReqAction1;
  }
  // @@protoc_insertion_point(field_mutable:gs_protocol.Message.req_action1)
  return payload_.req_action1_;
}
inline ::gs_protocol::ReqAction1* Message::release_req_action1() {
  // @@protoc_insertion_point(field_release:gs_protocol.Message.req_action1)
  if (has_req_action1()) {
    clear_has_payload();
    ::gs_protocol::ReqAction1* temp = payload_.req_action1_;
    payload_.req_action1_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Message::set_allocated_req_action1(::gs_protocol::ReqAction1* req_action1) {
  clear_payload();
  if (req_action1) {
    set_has_req_action1();
    payload_.req_action1_ = req_action1;
  }
  // @@protoc_insertion_point(field_set_allocated:gs_protocol.Message.req_action1)
}

// .gs_protocol.ReqQuit req_quit = 5;
inline bool Message::has_req_quit() const {
  return payload_case() == kReqQuit;
}
inline void Message::set_has_req_quit() {
  _oneof_case_[0] = kReqQuit;
}
inline void Message::clear_req_quit() {
  if (has_req_quit()) {
    delete payload_.req_quit_;
    clear_has_payload();
  }
}
inline  const ::gs_protocol::ReqQuit& Message::req_quit() const {
  // @@protoc_insertion_point(field_get:gs_protocol.Message.req_quit)
  return has_req_quit()
      ? *payload_.req_quit_
      : ::gs_protocol::ReqQuit::default_instance();
}
inline ::gs_protocol::ReqQuit* Message::mutable_req_quit() {
  if (!has_req_quit()) {
    clear_payload();
    set_has_req_quit();
    payload_.req_quit_ = new ::gs_protocol::ReqQuit;
  }
  // @@protoc_insertion_point(field_mutable:gs_protocol.Message.req_quit)
  return payload_.req_quit_;
}
inline ::gs_protocol::ReqQuit* Message::release_req_quit() {
  // @@protoc_insertion_point(field_release:gs_protocol.Message.req_quit)
  if (has_req_quit()) {
    clear_has_payload();
    ::gs_protocol::ReqQuit* temp = payload_.req_quit_;
    payload_.req_quit_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Message::set_allocated_req_quit(::gs_protocol::ReqQuit* req_quit) {
  clear_payload();
  if (req_quit) {
    set_has_req_quit();
    payload_.req_quit_ = req_quit;
  }
  // @@protoc_insertion_point(field_set_allocated:gs_protocol.Message.req_quit)
}

// .gs_protocol.ReqRoomList req_room_list = 6;
inline bool Message::has_req_room_list() const {
  return payload_case() == kReqRoomList;
}
inline void Message::set_has_req_room_list() {
  _oneof_case_[0] = kReqRoomList;
}
inline void Message::clear_req_room_list() {
  if (has_req_room_list()) {
    delete payload_.req_room_list_;
    clear_has_payload();
  }
}
inline  const ::gs_protocol::ReqRoomList& Message::req_room_list() const {
  // @@protoc_insertion_point(field_get:gs_protocol.Message.req_room_list)
  return has_req_room_list()
      ? *payload_.req_room_list_
      : ::gs_protocol::ReqRoomList::default_instance();
}
inline ::gs_protocol::ReqRoomList* Message::mutable_req_room_list() {
  if (!has_req_room_list()) {
    clear_payload();
    set_has_req_room_list();
    payload_.req_room_list_ = new ::gs_protocol::ReqRoomList;
  }
  // @@protoc_insertion_point(field_mutable:gs_protocol.Message.req_room_list)
  return payload_.req_room_list_;
}
inline ::gs_protocol::ReqRoomList* Message::release_req_room_list() {
  // @@protoc_insertion_point(field_release:gs_protocol.Message.req_room_list)
  if (has_req_room_list()) {
    clear_has_payload();
    ::gs_protocol::ReqRoomList* temp = payload_.req_room_list_;
    payload_.req_room_list_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Message::set_allocated_req_room_list(::gs_protocol::ReqRoomList* req_room_list) {
  clear_payload();
  if (req_room_list) {
    set_has_req_room_list();
    payload_.req_room_list_ = req_room_list;
  }
  // @@protoc_insertion_point(field_set_allocated:gs_protocol.Message.req_room_list)
}

// .gs_protocol.ResLogin res_login = 7;
inline bool Message::has_res_login() const {
  return payload_case() == kResLogin;
}
inline void Message::set_has_res_login() {
  _oneof_case_[0] = kResLogin;
}
inline void Message::clear_res_login() {
  if (has_res_login()) {
    delete payload_.res_login_;
    clear_has_payload();
  }
}
inline  const ::gs_protocol::ResLogin& Message::res_login() const {
  // @@protoc_insertion_point(field_get:gs_protocol.Message.res_login)
  return has_res_login()
      ? *payload_.res_login_
      : ::gs_protocol::ResLogin::default_instance();
}
inline ::gs_protocol::ResLogin* Message::mutable_res_login() {
  if (!has_res_login()) {
    clear_payload();
    set_has_res_login();
    payload_.res_login_ = new ::gs_protocol::ResLogin;
  }
  // @@protoc_insertion_point(field_mutable:gs_protocol.Message.res_login)
  return payload_.res_login_;
}
inline ::gs_protocol::ResLogin* Message::release_res_login() {
  // @@protoc_insertion_point(field_release:gs_protocol.Message.res_login)
  if (has_res_login()) {
    clear_has_payload();
    ::gs_protocol::ResLogin* temp = payload_.res_login_;
    payload_.res_login_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Message::set_allocated_res_login(::gs_protocol::ResLogin* res_login) {
  clear_payload();
  if (res_login) {
    set_has_res_login();
    payload_.res_login_ = res_login;
  }
  // @@protoc_insertion_point(field_set_allocated:gs_protocol.Message.res_login)
}

// .gs_protocol.ResCreate res_create = 8;
inline bool Message::has_res_create() const {
  return payload_case() == kResCreate;
}
inline void Message::set_has_res_create() {
  _oneof_case_[0] = kResCreate;
}
inline void Message::clear_res_create() {
  if (has_res_create()) {
    delete payload_.res_create_;
    clear_has_payload();
  }
}
inline  const ::gs_protocol::ResCreate& Message::res_create() const {
  // @@protoc_insertion_point(field_get:gs_protocol.Message.res_create)
  return has_res_create()
      ? *payload_.res_create_
      : ::gs_protocol::ResCreate::default_instance();
}
inline ::gs_protocol::ResCreate* Message::mutable_res_create() {
  if (!has_res_create()) {
    clear_payload();
    set_has_res_create();
    payload_.res_create_ = new ::gs_protocol::ResCreate;
  }
  // @@protoc_insertion_point(field_mutable:gs_protocol.Message.res_create)
  return payload_.res_create_;
}
inline ::gs_protocol::ResCreate* Message::release_res_create() {
  // @@protoc_insertion_point(field_release:gs_protocol.Message.res_create)
  if (has_res_create()) {
    clear_has_payload();
    ::gs_protocol::ResCreate* temp = payload_.res_create_;
    payload_.res_create_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Message::set_allocated_res_create(::gs_protocol::ResCreate* res_create) {
  clear_payload();
  if (res_create) {
    set_has_res_create();
    payload_.res_create_ = res_create;
  }
  // @@protoc_insertion_point(field_set_allocated:gs_protocol.Message.res_create)
}

// .gs_protocol.ResJoin res_join = 9;
inline bool Message::has_res_join() const {
  return payload_case() == kResJoin;
}
inline void Message::set_has_res_join() {
  _oneof_case_[0] = kResJoin;
}
inline void Message::clear_res_join() {
  if (has_res_join()) {
    delete payload_.res_join_;
    clear_has_payload();
  }
}
inline  const ::gs_protocol::ResJoin& Message::res_join() const {
  // @@protoc_insertion_point(field_get:gs_protocol.Message.res_join)
  return has_res_join()
      ? *payload_.res_join_
      : ::gs_protocol::ResJoin::default_instance();
}
inline ::gs_protocol::ResJoin* Message::mutable_res_join() {
  if (!has_res_join()) {
    clear_payload();
    set_has_res_join();
    payload_.res_join_ = new ::gs_protocol::ResJoin;
  }
  // @@protoc_insertion_point(field_mutable:gs_protocol.Message.res_join)
  return payload_.res_join_;
}
inline ::gs_protocol::ResJoin* Message::release_res_join() {
  // @@protoc_insertion_point(field_release:gs_protocol.Message.res_join)
  if (has_res_join()) {
    clear_has_payload();
    ::gs_protocol::ResJoin* temp = payload_.res_join_;
    payload_.res_join_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Message::set_allocated_res_join(::gs_protocol::ResJoin* res_join) {
  clear_payload();
  if (res_join) {
    set_has_res_join();
    payload_.res_join_ = res_join;
  }
  // @@protoc_insertion_point(field_set_allocated:gs_protocol.Message.res_join)
}

// .gs_protocol.ResAction1 res_action1 = 10;
inline bool Message::has_res_action1() const {
  return payload_case() == kResAction1;
}
inline void Message::set_has_res_action1() {
  _oneof_case_[0] = kResAction1;
}
inline void Message::clear_res_action1() {
  if (has_res_action1()) {
    delete payload_.res_action1_;
    clear_has_payload();
  }
}
inline  const ::gs_protocol::ResAction1& Message::res_action1() const {
  // @@protoc_insertion_point(field_get:gs_protocol.Message.res_action1)
  return has_res_action1()
      ? *payload_.res_action1_
      : ::gs_protocol::ResAction1::default_instance();
}
inline ::gs_protocol::ResAction1* Message::mutable_res_action1() {
  if (!has_res_action1()) {
    clear_payload();
    set_has_res_action1();
    payload_.res_action1_ = new ::gs_protocol::ResAction1;
  }
  // @@protoc_insertion_point(field_mutable:gs_protocol.Message.res_action1)
  return payload_.res_action1_;
}
inline ::gs_protocol::ResAction1* Message::release_res_action1() {
  // @@protoc_insertion_point(field_release:gs_protocol.Message.res_action1)
  if (has_res_action1()) {
    clear_has_payload();
    ::gs_protocol::ResAction1* temp = payload_.res_action1_;
    payload_.res_action1_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Message::set_allocated_res_action1(::gs_protocol::ResAction1* res_action1) {
  clear_payload();
  if (res_action1) {
    set_has_res_action1();
    payload_.res_action1_ = res_action1;
  }
  // @@protoc_insertion_point(field_set_allocated:gs_protocol.Message.res_action1)
}

// .gs_protocol.ResQuit res_quit = 11;
inline bool Message::has_res_quit() const {
  return payload_case() == kResQuit;
}
inline void Message::set_has_res_quit() {
  _oneof_case_[0] = kResQuit;
}
inline void Message::clear_res_quit() {
  if (has_res_quit()) {
    delete payload_.res_quit_;
    clear_has_payload();
  }
}
inline  const ::gs_protocol::ResQuit& Message::res_quit() const {
  // @@protoc_insertion_point(field_get:gs_protocol.Message.res_quit)
  return has_res_quit()
      ? *payload_.res_quit_
      : ::gs_protocol::ResQuit::default_instance();
}
inline ::gs_protocol::ResQuit* Message::mutable_res_quit() {
  if (!has_res_quit()) {
    clear_payload();
    set_has_res_quit();
    payload_.res_quit_ = new ::gs_protocol::ResQuit;
  }
  // @@protoc_insertion_point(field_mutable:gs_protocol.Message.res_quit)
  return payload_.res_quit_;
}
inline ::gs_protocol::ResQuit* Message::release_res_quit() {
  // @@protoc_insertion_point(field_release:gs_protocol.Message.res_quit)
  if (has_res_quit()) {
    clear_has_payload();
    ::gs_protocol::ResQuit* temp = payload_.res_quit_;
    payload_.res_quit_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Message::set_allocated_res_quit(::gs_protocol::ResQuit* res_quit) {
  clear_payload();
  if (res_quit) {
    set_has_res_quit();
    payload_.res_quit_ = res_quit;
  }
  // @@protoc_insertion_point(field_set_allocated:gs_protocol.Message.res_quit)
}

// .gs_protocol.ResRoomList res_room_list = 12;
inline bool Message::has_res_room_list() const {
  return payload_case() == kResRoomList;
}
inline void Message::set_has_res_room_list() {
  _oneof_case_[0] = kResRoomList;
}
inline void Message::clear_res_room_list() {
  if (has_res_room_list()) {
    delete payload_.res_room_list_;
    clear_has_payload();
  }
}
inline  const ::gs_protocol::ResRoomList& Message::res_room_list() const {
  // @@protoc_insertion_point(field_get:gs_protocol.Message.res_room_list)
  return has_res_room_list()
      ? *payload_.res_room_list_
      : ::gs_protocol::ResRoomList::default_instance();
}
inline ::gs_protocol::ResRoomList* Message::mutable_res_room_list() {
  if (!has_res_room_list()) {
    clear_payload();
    set_has_res_room_list();
    payload_.res_room_list_ = new ::gs_protocol::ResRoomList;
  }
  // @@protoc_insertion_point(field_mutable:gs_protocol.Message.res_room_list)
  return payload_.res_room_list_;
}
inline ::gs_protocol::ResRoomList* Message::release_res_room_list() {
  // @@protoc_insertion_point(field_release:gs_protocol.Message.res_room_list)
  if (has_res_room_list()) {
    clear_has_payload();
    ::gs_protocol::ResRoomList* temp = payload_.res_room_list_;
    payload_.res_room_list_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Message::set_allocated_res_room_list(::gs_protocol::ResRoomList* res_room_list) {
  clear_payload();
  if (res_room_list) {
    set_has_res_room_list();
    payload_.res_room_list_ = res_room_list;
  }
  // @@protoc_insertion_point(field_set_allocated:gs_protocol.Message.res_room_list)
}

// .gs_protocol.NotifyJoinMsg notify_join = 13;
inline bool Message::has_notify_join() const {
  return payload_case() == kNotifyJoin;
}
inline void Message::set_has_notify_join() {
  _oneof_case_[0] = kNotifyJoin;
}
inline void Message::clear_notify_join() {
  if (has_notify_join()) {
    delete payload_.notify_join_;
    clear_has_payload();
  }
}
inline  const ::gs_protocol::NotifyJoinMsg& Message::notify_join() const {
  // @@protoc_insertion_point(field_get:gs_protocol.Message.notify_join)
  return has_notify_join()
      ? *payload_.notify_join_
      : ::gs_protocol::NotifyJoinMsg::default_instance();
}
inline ::gs_protocol::NotifyJoinMsg* Message::mutable_notify_join() {
  if (!has_notify_join()) {
    clear_payload();
    set_has_notify_join();
    payload_.notify_join_ = new ::gs_protocol::NotifyJoinMsg;
  }
  // @@protoc_insertion_point(field_mutable:gs_protocol.Message.notify_join)
  return payload_.notify_join_;
}
inline ::gs_protocol::NotifyJoinMsg* Message::release_notify_join() {
  // @@protoc_insertion_point(field_release:gs_protocol.Message.notify_join)
  if (has_notify_join()) {
    clear_has_payload();
    ::gs_protocol::NotifyJoinMsg* temp = payload_.notify_join_;
    payload_.notify_join_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Message::set_allocated_notify_join(::gs_protocol::NotifyJoinMsg* notify_join) {
  clear_payload();
  if (notify_join) {
    set_has_notify_join();
    payload_.notify_join_ = notify_join;
  }
  // @@protoc_insertion_point(field_set_allocated:gs_protocol.Message.notify_join)
}

// .gs_protocol.NotifyAction1Msg notify_action1 = 14;
inline bool Message::has_notify_action1() const {
  return payload_case() == kNotifyAction1;
}
inline void Message::set_has_notify_action1() {
  _oneof_case_[0] = kNotifyAction1;
}
inline void Message::clear_notify_action1() {
  if (has_notify_action1()) {
    delete payload_.notify_action1_;
    clear_has_payload();
  }
}
inline  const ::gs_protocol::NotifyAction1Msg& Message::notify_action1() const {
  // @@protoc_insertion_point(field_get:gs_protocol.Message.notify_action1)
  return has_notify_action1()
      ? *payload_.notify_action1_
      : ::gs_protocol::NotifyAction1Msg::default_instance();
}
inline ::gs_protocol::NotifyAction1Msg* Message::mutable_notify_action1() {
  if (!has_notify_action1()) {
    clear_payload();
    set_has_notify_action1();
    payload_.notify_action1_ = new ::gs_protocol::NotifyAction1Msg;
  }
  // @@protoc_insertion_point(field_mutable:gs_protocol.Message.notify_action1)
  return payload_.notify_action1_;
}
inline ::gs_protocol::NotifyAction1Msg* Message::release_notify_action1() {
  // @@protoc_insertion_point(field_release:gs_protocol.Message.notify_action1)
  if (has_notify_action1()) {
    clear_has_payload();
    ::gs_protocol::NotifyAction1Msg* temp = payload_.notify_action1_;
    payload_.notify_action1_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Message::set_allocated_notify_action1(::gs_protocol::NotifyAction1Msg* notify_action1) {
  clear_payload();
  if (notify_action1) {
    set_has_notify_action1();
    payload_.notify_action1_ = notify_action1;
  }
  // @@protoc_insertion_point(field_set_allocated:gs_protocol.Message.notify_action1)
}

// .gs_protocol.NotifyQuitMsg notify_quit = 15;
inline bool Message::has_notify_quit() const {
  return payload_case() == kNotifyQuit;
}
inline void Message::set_has_notify_quit() {
  _oneof_case_[0] = kNotifyQuit;
}
inline void Message::clear_notify_quit() {
  if (has_notify_quit()) {
    delete payload_.notify_quit_;
    clear_has_payload();
  }
}
inline  const ::gs_protocol::NotifyQuitMsg& Message::notify_quit() const {
  // @@protoc_insertion_point(field_get:gs_protocol.Message.notify_quit)
  return has_notify_quit()
      ? *payload_.notify_quit_
      : ::gs_protocol::NotifyQuitMsg::default_instance();
}
inline ::gs_protocol::NotifyQuitMsg* Message::mutable_notify_quit() {
  if (!has_notify_quit()) {
    clear_payload();
    set_has_notify_quit();
    payload_.notify_quit_ = new ::gs_protocol::NotifyQuitMsg;
  }
  // @@protoc_insertion_point(field_mutable:gs_protocol.Message.notify_quit)
  return payload_.notify_quit_;
}
inline ::gs_protocol::NotifyQuitMsg* Message::release_notify_quit() {
  // @@protoc_insertion_point(field_release:gs_protocol.Message.notify_quit)
  if (has_notify_quit()) {
    clear_has_payload();
    ::gs_protocol::NotifyQuitMsg* temp = payload_.notify_quit_;
    payload_.notify_quit_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Message::set_allocated_notify_quit(::gs_protocol::NotifyQuitMsg* notify_quit) {
  clear_payload();
  if (notify_quit) {
    set_has_notify_quit();
    payload_.notify_quit_ = notify_quit;
  }
  // @@protoc_insertion_point(field_set_allocated:gs_protocol.Message.notify_quit)
}

// .gs_protocol.ErrorMsg error = 1000;
inline bool Message::has_error() const {
  return payload_case() == kError;
}
inline void Message::set_has_error() {
  _oneof_case_[0] = kError;
}
inline void Message::clear_error() {
  if (has_error()) {
    delete payload_.error_;
    clear_has_payload();
  }
}
inline  const ::gs_protocol::ErrorMsg& Message::error() const {
  // @@protoc_insertion_point(field_get:gs_protocol.Message.error)
  return has_error()
      ? *payload_.error_
      : ::gs_protocol::ErrorMsg::default_instance();
}
inline ::gs_protocol::ErrorMsg* Message::mutable_error() {
  if (!has_error()) {
    clear_payload();
    set_has_error();
    payload_.error_ = new ::gs_protocol::ErrorMsg;
  }
  // @@protoc_insertion_point(field_mutable:gs_protocol.Message.error)
  return payload_.error_;
}
inline ::gs_protocol::ErrorMsg* Message::release_error() {
  // @@protoc_insertion_point(field_release:gs_protocol.Message.error)
  if (has_error()) {
    clear_has_payload();
    ::gs_protocol::ErrorMsg* temp = payload_.error_;
    payload_.error_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Message::set_allocated_error(::gs_protocol::ErrorMsg* error) {
  clear_payload();
  if (error) {
    set_has_error();
    payload_.error_ = error;
  }
  // @@protoc_insertion_point(field_set_allocated:gs_protocol.Message.error)
}

inline bool Message::has_payload() const {
  return payload_case() != PAYLOAD_NOT_SET;
}
inline void Message::clear_has_payload() {
  _oneof_case_[0] = PAYLOAD_NOT_SET;
}
inline Message::PayloadCase Message::payload_case() const {
  return Message::PayloadCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// ReqLogin

// int64 userID = 1;
inline void ReqLogin::clear_userid() {
  userid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ReqLogin::userid() const {
  // @@protoc_insertion_point(field_get:gs_protocol.ReqLogin.userID)
  return userid_;
}
inline void ReqLogin::set_userid(::google::protobuf::int64 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:gs_protocol.ReqLogin.userID)
}

// -------------------------------------------------------------------

// ReqCreate

// int64 userID = 1;
inline void ReqCreate::clear_userid() {
  userid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ReqCreate::userid() const {
  // @@protoc_insertion_point(field_get:gs_protocol.ReqCreate.userID)
  return userid_;
}
inline void ReqCreate::set_userid(::google::protobuf::int64 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:gs_protocol.ReqCreate.userID)
}

// -------------------------------------------------------------------

// ReqJoin

// int64 userID = 1;
inline void ReqJoin::clear_userid() {
  userid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ReqJoin::userid() const {
  // @@protoc_insertion_point(field_get:gs_protocol.ReqJoin.userID)
  return userid_;
}
inline void ReqJoin::set_userid(::google::protobuf::int64 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:gs_protocol.ReqJoin.userID)
}

// int64 roomID = 2;
inline void ReqJoin::clear_roomid() {
  roomid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ReqJoin::roomid() const {
  // @@protoc_insertion_point(field_get:gs_protocol.ReqJoin.roomID)
  return roomid_;
}
inline void ReqJoin::set_roomid(::google::protobuf::int64 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:gs_protocol.ReqJoin.roomID)
}

// -------------------------------------------------------------------

// ReqAction1

// int64 userID = 1;
inline void ReqAction1::clear_userid() {
  userid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ReqAction1::userid() const {
  // @@protoc_insertion_point(field_get:gs_protocol.ReqAction1.userID)
  return userid_;
}
inline void ReqAction1::set_userid(::google::protobuf::int64 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:gs_protocol.ReqAction1.userID)
}

// -------------------------------------------------------------------

// ReqQuit

// int64 userID = 1;
inline void ReqQuit::clear_userid() {
  userid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ReqQuit::userid() const {
  // @@protoc_insertion_point(field_get:gs_protocol.ReqQuit.userID)
  return userid_;
}
inline void ReqQuit::set_userid(::google::protobuf::int64 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:gs_protocol.ReqQuit.userID)
}

// -------------------------------------------------------------------

// ReqRoomList

// int64 userID = 1;
inline void ReqRoomList::clear_userid() {
  userid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ReqRoomList::userid() const {
  // @@protoc_insertion_point(field_get:gs_protocol.ReqRoomList.userID)
  return userid_;
}
inline void ReqRoomList::set_userid(::google::protobuf::int64 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:gs_protocol.ReqRoomList.userID)
}

// -------------------------------------------------------------------

// ResLogin

// int64 userID = 1;
inline void ResLogin::clear_userid() {
  userid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ResLogin::userid() const {
  // @@protoc_insertion_point(field_get:gs_protocol.ResLogin.userID)
  return userid_;
}
inline void ResLogin::set_userid(::google::protobuf::int64 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:gs_protocol.ResLogin.userID)
}

// int32 result = 2;
inline void ResLogin::clear_result() {
  result_ = 0;
}
inline ::google::protobuf::int32 ResLogin::result() const {
  // @@protoc_insertion_point(field_get:gs_protocol.ResLogin.result)
  return result_;
}
inline void ResLogin::set_result(::google::protobuf::int32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:gs_protocol.ResLogin.result)
}

// -------------------------------------------------------------------

// ResCreate

// int64 userID = 1;
inline void ResCreate::clear_userid() {
  userid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ResCreate::userid() const {
  // @@protoc_insertion_point(field_get:gs_protocol.ResCreate.userID)
  return userid_;
}
inline void ResCreate::set_userid(::google::protobuf::int64 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:gs_protocol.ResCreate.userID)
}

// int64 roomID = 2;
inline void ResCreate::clear_roomid() {
  roomid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ResCreate::roomid() const {
  // @@protoc_insertion_point(field_get:gs_protocol.ResCreate.roomID)
  return roomid_;
}
inline void ResCreate::set_roomid(::google::protobuf::int64 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:gs_protocol.ResCreate.roomID)
}

// -------------------------------------------------------------------

// ResJoin

// int64 userID = 1;
inline void ResJoin::clear_userid() {
  userid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ResJoin::userid() const {
  // @@protoc_insertion_point(field_get:gs_protocol.ResJoin.userID)
  return userid_;
}
inline void ResJoin::set_userid(::google::protobuf::int64 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:gs_protocol.ResJoin.userID)
}

// int64 roomID = 2;
inline void ResJoin::clear_roomid() {
  roomid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ResJoin::roomid() const {
  // @@protoc_insertion_point(field_get:gs_protocol.ResJoin.roomID)
  return roomid_;
}
inline void ResJoin::set_roomid(::google::protobuf::int64 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:gs_protocol.ResJoin.roomID)
}

// repeated int64 members = 3;
inline int ResJoin::members_size() const {
  return members_.size();
}
inline void ResJoin::clear_members() {
  members_.Clear();
}
inline ::google::protobuf::int64 ResJoin::members(int index) const {
  // @@protoc_insertion_point(field_get:gs_protocol.ResJoin.members)
  return members_.Get(index);
}
inline void ResJoin::set_members(int index, ::google::protobuf::int64 value) {
  members_.Set(index, value);
  // @@protoc_insertion_point(field_set:gs_protocol.ResJoin.members)
}
inline void ResJoin::add_members(::google::protobuf::int64 value) {
  members_.Add(value);
  // @@protoc_insertion_point(field_add:gs_protocol.ResJoin.members)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ResJoin::members() const {
  // @@protoc_insertion_point(field_list:gs_protocol.ResJoin.members)
  return members_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ResJoin::mutable_members() {
  // @@protoc_insertion_point(field_mutable_list:gs_protocol.ResJoin.members)
  return &members_;
}

// -------------------------------------------------------------------

// ResAction1

// int64 userID = 1;
inline void ResAction1::clear_userid() {
  userid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ResAction1::userid() const {
  // @@protoc_insertion_point(field_get:gs_protocol.ResAction1.userID)
  return userid_;
}
inline void ResAction1::set_userid(::google::protobuf::int64 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:gs_protocol.ResAction1.userID)
}

// int32 result = 2;
inline void ResAction1::clear_result() {
  result_ = 0;
}
inline ::google::protobuf::int32 ResAction1::result() const {
  // @@protoc_insertion_point(field_get:gs_protocol.ResAction1.result)
  return result_;
}
inline void ResAction1::set_result(::google::protobuf::int32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:gs_protocol.ResAction1.result)
}

// -------------------------------------------------------------------

// ResQuit

// int64 userID = 1;
inline void ResQuit::clear_userid() {
  userid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ResQuit::userid() const {
  // @@protoc_insertion_point(field_get:gs_protocol.ResQuit.userID)
  return userid_;
}
inline void ResQuit::set_userid(::google::protobuf::int64 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:gs_protocol.ResQuit.userID)
}

// int32 isSuccess = 2;
inline void ResQuit::clear_issuccess() {
  issuccess_ = 0;
}
inline ::google::protobuf::int32 ResQuit::issuccess() const {
  // @@protoc_insertion_point(field_get:gs_protocol.ResQuit.isSuccess)
  return issuccess_;
}
inline void ResQuit::set_issuccess(::google::protobuf::int32 value) {
  
  issuccess_ = value;
  // @@protoc_insertion_point(field_set:gs_protocol.ResQuit.isSuccess)
}

// -------------------------------------------------------------------

// ResRoomList

// int64 userID = 1;
inline void ResRoomList::clear_userid() {
  userid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ResRoomList::userid() const {
  // @@protoc_insertion_point(field_get:gs_protocol.ResRoomList.userID)
  return userid_;
}
inline void ResRoomList::set_userid(::google::protobuf::int64 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:gs_protocol.ResRoomList.userID)
}

// repeated int64 roomIDs = 2;
inline int ResRoomList::roomids_size() const {
  return roomids_.size();
}
inline void ResRoomList::clear_roomids() {
  roomids_.Clear();
}
inline ::google::protobuf::int64 ResRoomList::roomids(int index) const {
  // @@protoc_insertion_point(field_get:gs_protocol.ResRoomList.roomIDs)
  return roomids_.Get(index);
}
inline void ResRoomList::set_roomids(int index, ::google::protobuf::int64 value) {
  roomids_.Set(index, value);
  // @@protoc_insertion_point(field_set:gs_protocol.ResRoomList.roomIDs)
}
inline void ResRoomList::add_roomids(::google::protobuf::int64 value) {
  roomids_.Add(value);
  // @@protoc_insertion_point(field_add:gs_protocol.ResRoomList.roomIDs)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ResRoomList::roomids() const {
  // @@protoc_insertion_point(field_list:gs_protocol.ResRoomList.roomIDs)
  return roomids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ResRoomList::mutable_roomids() {
  // @@protoc_insertion_point(field_mutable_list:gs_protocol.ResRoomList.roomIDs)
  return &roomids_;
}

// -------------------------------------------------------------------

// NotifyJoinMsg

// int64 userID = 1;
inline void NotifyJoinMsg::clear_userid() {
  userid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 NotifyJoinMsg::userid() const {
  // @@protoc_insertion_point(field_get:gs_protocol.NotifyJoinMsg.userID)
  return userid_;
}
inline void NotifyJoinMsg::set_userid(::google::protobuf::int64 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:gs_protocol.NotifyJoinMsg.userID)
}

// int64 roomID = 2;
inline void NotifyJoinMsg::clear_roomid() {
  roomid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 NotifyJoinMsg::roomid() const {
  // @@protoc_insertion_point(field_get:gs_protocol.NotifyJoinMsg.roomID)
  return roomid_;
}
inline void NotifyJoinMsg::set_roomid(::google::protobuf::int64 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:gs_protocol.NotifyJoinMsg.roomID)
}

// -------------------------------------------------------------------

// NotifyAction1Msg

// int64 userID = 1;
inline void NotifyAction1Msg::clear_userid() {
  userid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 NotifyAction1Msg::userid() const {
  // @@protoc_insertion_point(field_get:gs_protocol.NotifyAction1Msg.userID)
  return userid_;
}
inline void NotifyAction1Msg::set_userid(::google::protobuf::int64 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:gs_protocol.NotifyAction1Msg.userID)
}

// -------------------------------------------------------------------

// NotifyQuitMsg

// int64 userID = 1;
inline void NotifyQuitMsg::clear_userid() {
  userid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 NotifyQuitMsg::userid() const {
  // @@protoc_insertion_point(field_get:gs_protocol.NotifyQuitMsg.userID)
  return userid_;
}
inline void NotifyQuitMsg::set_userid(::google::protobuf::int64 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:gs_protocol.NotifyQuitMsg.userID)
}

// int64 roomID = 2;
inline void NotifyQuitMsg::clear_roomid() {
  roomid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 NotifyQuitMsg::roomid() const {
  // @@protoc_insertion_point(field_get:gs_protocol.NotifyQuitMsg.roomID)
  return roomid_;
}
inline void NotifyQuitMsg::set_roomid(::google::protobuf::int64 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:gs_protocol.NotifyQuitMsg.roomID)
}

// -------------------------------------------------------------------

// ErrorMsg

// int32 errCode = 1;
inline void ErrorMsg::clear_errcode() {
  errcode_ = 0;
}
inline ::google::protobuf::int32 ErrorMsg::errcode() const {
  // @@protoc_insertion_point(field_get:gs_protocol.ErrorMsg.errCode)
  return errcode_;
}
inline void ErrorMsg::set_errcode(::google::protobuf::int32 value) {
  
  errcode_ = value;
  // @@protoc_insertion_point(field_set:gs_protocol.ErrorMsg.errCode)
}

// string errMessage = 2;
inline void ErrorMsg::clear_errmessage() {
  errmessage_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ErrorMsg::errmessage() const {
  // @@protoc_insertion_point(field_get:gs_protocol.ErrorMsg.errMessage)
  return errmessage_.GetNoArena();
}
inline void ErrorMsg::set_errmessage(const ::std::string& value) {
  
  errmessage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gs_protocol.ErrorMsg.errMessage)
}
#if LANG_CXX11
inline void ErrorMsg::set_errmessage(::std::string&& value) {
  
  errmessage_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:gs_protocol.ErrorMsg.errMessage)
}
#endif
inline void ErrorMsg::set_errmessage(const char* value) {
  
  errmessage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gs_protocol.ErrorMsg.errMessage)
}
inline void ErrorMsg::set_errmessage(const char* value, size_t size) {
  
  errmessage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gs_protocol.ErrorMsg.errMessage)
}
inline ::std::string* ErrorMsg::mutable_errmessage() {
  
  // @@protoc_insertion_point(field_mutable:gs_protocol.ErrorMsg.errMessage)
  return errmessage_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ErrorMsg::release_errmessage() {
  // @@protoc_insertion_point(field_release:gs_protocol.ErrorMsg.errMessage)
  
  return errmessage_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ErrorMsg::set_allocated_errmessage(::std::string* errmessage) {
  if (errmessage != NULL) {
    
  } else {
    
  }
  errmessage_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), errmessage);
  // @@protoc_insertion_point(field_set_allocated:gs_protocol.ErrorMsg.errMessage)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace gs_protocol

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_protocol_2eproto__INCLUDED
