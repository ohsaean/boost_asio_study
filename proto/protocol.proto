syntax = "proto3";
package gs_protocol;

message Message {
	oneof payload {
		// request
		ReqLogin req_login = 1;
		ReqCreate req_create = 2;
		ReqJoin req_join = 3;
		ReqAction1 req_action1 = 4;
		ReqQuit req_quit = 5;
		ReqRoomList req_room_list = 6;

		// response
		ResLogin res_login = 7;
		ResCreate res_create = 8;
		ResJoin res_join = 9;
		ResAction1 res_action1 = 10;
		ResQuit res_quit = 11;
		ResRoomList res_room_list = 12;

		// notify
		NotifyJoinMsg notify_join = 13;
		NotifyAction1Msg notify_action1 = 14;
		NotifyQuitMsg notify_quit = 15;

		// error
		ErrorMsg error = 1000;
	}
}


// request payload
message ReqLogin {
	int64 userID = 1;
}
message ReqCreate {
	int64 userID = 1;
}
message ReqJoin {
	int64 userID = 1;
	int64 roomID = 2;
}
message ReqAction1 {
	int64 userID = 1;
}
message ReqQuit {
	int64 userID = 1;
}
message ReqRoomList {
	int64 userID = 1;
}


// response payload
message ResLogin {
	int64 userID = 1;
	int32 result = 2;
}
message ResCreate {
	int64 userID = 1;
	int64 roomID = 2;
}
message ResJoin {
	int64 userID = 1;
	int64 roomID = 2;
	repeated int64 members = 3;
}
message ResAction1 {
	int64 userID = 1;
	int32 result = 2;
}
message ResQuit {
	int64 userID = 1;
	int32 isSuccess = 2;
}
message ResRoomList {
	int64 userID = 1;
	repeated int64 roomIDs = 2;
}


// notify message type (for client)
message NotifyJoinMsg {
	int64 userID = 1;
	int64 roomID = 2;
}
message NotifyAction1Msg {
	int64 userID = 1;
}
message NotifyQuitMsg {
	int64 userID = 1;
	int64 roomID = 2;
}


// error message
message ErrorMsg {
	int32 errCode = 1; // pre-defined error code
	string errMessage = 2; // custom error message
}